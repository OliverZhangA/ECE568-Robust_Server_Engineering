// /*
//  * This Java source file was generated by the Gradle 'init' task.
//  */
// package edu.duke.ece568.amazon;
// import java.io.BufferedReader;  
// import java.io.IOException;  
// import java.io.InputStreamReader;  
// import java.io.PrintStream;  
// import java.net.Socket;  
// import java.net.SocketTimeoutException;
// import edu.duke.ece568.amazon.protos.AmazonUps.*;
// import edu.duke.ece568.amazon.protos.WorldAmazon.*;
// import com.google.protobuf.GeneratedMessageV3;
// import com.google.protobuf.CodedInputStream;
// import com.google.protobuf.CodedOutputStream;
// import java.io.*;

// public class App {
//     public String getGreeting() {
//         return "Hello World!";
//     }
//     public static <T extends GeneratedMessageV3> boolean sendMsgTo(T msg, OutputStream out) {
//         try {
//             byte[] data = msg.toByteArray();
//             CodedOutputStream codedOutputStream = CodedOutputStream.newInstance(out);
//             codedOutputStream.writeUInt32NoTag(data.length);
//             codedOutputStream.writeRawBytes(data);
//             // NOTE!!! always flush the result to stream
//             codedOutputStream.flush();
//             return true;
//         } catch (IOException e) {
//             System.err.println("sendToWorld: " + e.toString());
//             return false;
//         }
//     }
//     public static void main(String[] args) throws IOException{  
//         //客户端请求与本机在20006端口建立TCP连接   
//         Socket client = new Socket("vcm-24561.vm.duke.edu", 23456);  
//         client.setSoTimeout(10000);  
//         //获取键盘输入   
//         BufferedReader input = new BufferedReader(new InputStreamReader(System.in));  
//         //获取Socket的输出流，用来发送数据到服务端    
//         PrintStream out = new PrintStream(client.getOutputStream());  
//         //com.google.protobuf.CodedOutputStream coded = com.google.protobuf.CodedOutputStream.newInstance(out);
//         //com.google.protobuf.CodedOutputStream outto(out);
//         //获取Socket的输入流，用来接收从服务端发送过来的数据    
//         BufferedReader buf =  new BufferedReader(new InputStreamReader(client.getInputStream()));  
//         boolean flag = true;
//         AInitWarehouse warehouse = AInitWarehouse.newBuilder().setId(322).setX(50).setY(50).build();
//         AConnect connect = AConnect.newBuilder().setWorldid(40).setIsAmazon(true).addInitwh(warehouse).build();
//         AConnect connectu = AConnect.newBuilder().setIsAmazon(false).build();
//         //AConnect connect = AConnect.newBuilder().setWorldid(null).setIsAmazon(false).build();
//         ACommands command = ACommands.newBuilder().setDisconnect(false).build();
//         sendMsgTo(connectu,out);
//         //command.writeTo(coded);
//         while(flag){  
//             System.out.print("输入信息：");  
//             String str = input.readLine();  
//             //发送数据到服务端    
//             //out.println(str);  
//             //WorldAmazon.ACommands.Builder command = WorldAmazon.ACommands.newBuilder();
//             //AmazonCommands.Builder command = AmazonCommands.newBuilder();
//             //command.setDisconnect(true);
//             //command.writeTo(out);
//             if("bye".equals(str)){  
//                 flag = false;  
//             }else{  
//                 try{  
//                     //从服务器端接收数据有个时间限制（系统自设，也可以自己设置），超过了这个时间，便会抛出该异常  
//                     String echo = buf.readLine();  
//                     System.out.println(echo);  
//                 }catch(SocketTimeoutException e){  
//                     System.out.println("Time out, No response");  
//                 }  
//             }  
//         }  
//         input.close();  
//         if(client != null){  
//             //如果构造函数建立起了连接，则关闭套接字，如果没有建立起连接，自然不用关闭  
//             client.close(); //只关闭socket，其关联的输入输出流也会被关闭  
//         }  
//     }  
// }
